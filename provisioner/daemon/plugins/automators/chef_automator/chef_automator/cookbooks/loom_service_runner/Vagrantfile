# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Disable vagrant-ohai plugin, for now
  #config.ohai.enable = false

  # We *need* vagrant-omnibus for these box images
  config.omnibus.chef_version = "11.4.0"

  # Enable berkshelf plugin
  config.berkshelf.enabled = true

  # Run Multi-Machine environment to test both OSs
  # http://docs.vagrantup.com/v2/multi-machine/index.html
  config.vm.define :centos do |centos|
    centos.vm.box       = "opscode-centos-6.4"
    centos.vm.box_url   = "https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_centos-6.4_provisionerless.box"
    centos.vm.host_name = "loom_service_runner-centos6-berkshelf"
    centos.vm.network :private_network, ip: "33.33.33.10"
  end

  config.vm.define :ubuntu do |ubuntu|
    ubuntu.vm.box       = "opscode-ubuntu-12.04"
    ubuntu.vm.box_url   = "https://opscode-vm-bento.s3.amazonaws.com/vagrant/opscode_ubuntu-12.04_provisionerless.box"
    ubuntu.vm.host_name = "loom_service_runner-ubuntu12-berkshelf"
    ubuntu.vm.network :private_network, ip: "33.33.33.11"
  end

  # Set some crazy high defaults for SSH connections
  config.ssh.forward_agent = true
  #config.ssh.max_tries = 40
  #config.ssh.timeout   = 120

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #config.vm.provider :virtualbox do |vb|
  #  # Use VBoxManage to customize the VM. For example to change memory:
  #  vb.customize ["modifyvm", :id, "--memory", "4096"]
  #end

  # Enable provisioning with chef solo, specifying a cookbooks path, roles
  # path, and data_bags path (all relative to this Vagrantfile), and adding
  # some recipes and/or roles.
 
  config.vm.provision :chef_solo do |chef|
     chef.cookbooks_path = "../../cookbooks"
  #   chef.roles_path = "../../roles"
  #   chef.data_bags_path = "../../data_bags"
  #   chef.add_recipe "mysql"
  #   chef.add_role "web"
  #
    # You may also specify custom JSON attributes:
    chef.json = {
      :mysql => {
        :server_root_password => 'rootpass',
        :server_debian_password => 'debpass',
        :server_repl_password => 'replpass'
      },
      :loom => {
        :node => {
          :services => {
            "apache2" => "start"
          }
        }
      }
    }

    chef.run_list = [
      "recipe[apache2::default]",
      "recipe[loom_service_runner::default]"
    ]
  end
end

